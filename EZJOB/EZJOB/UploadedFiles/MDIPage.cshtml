@using System.Data;
@model DataSet
@{
    //var menuid = TempData["menuid"].ToString();
    var vouchertitle = TempData["vouchertitle"];
    //var vouchertype = TempData["vouchertype"];
    ViewBag.Title = "Dashboard";
}
@{
    var dataTableJson = ViewBag.DataTableJson;
}

<script src="~/Scripts/jquery-3.1.1.js"></script>
<script src="~/EZJavaScript/EZJavaScript1.js"></script>
<script src="~/EZJavaScript/EZTable.js"></script>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    var inqcnt;
    Date.prototype.formatDate = function (MyDate_String_Value) {
        //MyDate_String_Value = "/Date(1224043200000)/"
        var now = new Date(MyDate_String_Value);

        var day = ("0" + now.getDate()).slice(-2);
        var month = ("0" + (now.getMonth() + 1)).slice(-2);

        var today = now.getFullYear() + "-" + (month) + "-" + (day);
        return (today);
    }
    function ConvertDate(Par_Date) {
        var dateString = Par_Date.substr(6);
        var currentTime = new Date(parseInt(dateString));
        var month = currentTime.getMonth() + 1;
        var day = currentTime.getDate();
        var year = currentTime.getFullYear();

        var day = ("0" + day).slice(-2);
        var month = ("0" + month).slice(-2);

        var date = year + "-" + (month) + "-" + (day);
        return (date);
    }

    $(function () {

        ////document.onkeydown = function (e) {
        ////    if (e.ctrlKey && (e.keyCode === 67 || e.keyCode === 86 || e.keyCode === 85 || e.keyCode === 117)) {//Alt+c, Alt+v will also be disabled sadly.
        ////        alert('not allowed');
        ////    }
        ////    return false;
        ////};

        var dt = new Date();
        var dt1 = new Date();
        var SaveMode;
        var ModuleName;
        var TableStr = "";
        var Colcount = 0;
        var DataSetDrawingDetail = [];

        $(document).ready(function () {
            var ModuleID = '@(TempData["menuid"])';
            dt1.setDate(dt1.getDate() - 30)
            $("#fromdate").val(Date.prototype.formatDate(dt1));
            $("#todate").val(Date.prototype.formatDate(dt));
            $.fn.FillInqTracking();
            $.fn.DocCount($("#fromdate").val(), $("#todate").val());
            $.fn.FillMaterialRequestNew('ID_SalesInquiry')
            $.fn.SalesmWiseInqCount();
        });

        //------------------- Fill Grid ---------------------------
        $("#OkBtn").click(function () {
            $.fn.FillInqTracking();
            $.fn.DocCount($("#fromdate").val(), $("#todate").val());
            $.fn.FillMaterialRequestNew('ID_SalesInquiry')
            $.fn.SalesmWiseInqCount();
        });
        //----------------------------------------------------

        //------------------------------ Inq Tracking List ---
        $.fn.FillInqTracking = function () {
            if ($.fn.DataTable.isDataTable('#grddetail')) {
                var table = $('#grddetail').DataTable();
                table.destroy();
                $("#grddetail th, #grddetail td").remove();
            }

            var DataSetDetail = [];
            $('#grddetail').DataTable({
                data: DataSetDetail,
                columns: [
                    { title: "Inq Number" },
                    { title: "Inq Date" },
                    { title: "Salesman" },
                    { title: "Customer" },
                    { title: "Inq Status" },
                    { title: "Quot Number" },
                    { title: "Quot Date" },
                    { title: "Order Number" },
                    { title: "Order Date" },
                    { title: "PO Number" },
                    { title: "PO Date" },
                    { title: "Delivery Number" },
                    { title: "Delivery Date" }
                ],
                searching: false,
                sorting: false,
                paging: false,
                fixedHeader: true,
                "scrollX": true,
                "scrollY": "700px",
                "scrollCollapse": true,
                'dom': 'Rlfrtip'
            });

            $.get('/FillInqTrackingList', { FromDate: $("#fromdate").val(), ToDate: $("#todate").val() }).done(function (response) {
                var table = $('#grddetail').DataTable();
                var QDate;
                var SODate;
                var DODate;
                var PODate;
                var QNumber;
                var SONumber;
                var DONumber;
                var PONumber;
                $.each(response, function (index) {

                    if (ConvertDate(response[index].QuotDate) == "1899-12-31") {
                        var QDate = "";
                    }
                    else {
                        QDate = ConvertDate(response[index].QuotDate);
                    }
                    if (ConvertDate(response[index].SODate) == "1899-12-31") {
                        SODate = "";
                    }
                    else {
                        SODate = ConvertDate(response[index].SODate);
                    }
                    if (ConvertDate(response[index].PODate) == "1899-12-31") {
                        PODate = "";
                    }
                    else {
                        PODate = ConvertDate(response[index].SODate);
                    }
                    if (ConvertDate(response[index].DeliveryDate) == "1899-12-31") {
                        DoDate = "";
                    }
                    else {
                        DoDate = ConvertDate(response[index].DeliveryDate);
                    }
                    if (response[index].QuotNumber == "0") {
                        QNumber = "";
                    }
                    else {
                        QNumber = '<a href=/OrderEntry?menuid=ID_SalesQuotation&code=' + response[index].QuotNumber + ' class=\"btn btn-link\">' + response[index].QuotNumber + '</a>';
                    }
                    if (response[index].SONumber == "0") {
                        SONumber = "";
                    }
                    else {
                        SONumber = '<a href=/OrderEntry?menuid=ID_SalesQuotation&code=' + response[index].SONumber + ' class=\"btn btn-link\">' + response[index].SONumber + '</a>';
                    }
                    if (response[index].PONumber == "0") {
                        PONumber = "";
                    }
                    else {
                        PONumber = '<a href=/OrderEntry?menuid=ID_SalesQuotation&code=' + response[index].PONumber + ' class=\"btn btn-link\">' + response[index].PONumber + '</a>';
                    }
                    if (response[index].DeliveryNumber == "0") {
                        DONumber = "";
                    }
                    else {
                        DONumber = '<a href=/OrderEntry?menuid=ID_SalesQuotation&code=' + response[index].DeliveryNumber + ' class=\"btn btn-link\">' + response[index].DeliveryNumber + '</a>';
                    }
                    table.row.add([
                            '<a href=/MaterialRequestEntry?menuid=ID_SalesInquiry&code=' + response[index].InqNumber + ' class=\"btn btn-link\">' + response[index].InqNumber + '</a>',
                            ConvertDate(response[index].InqDate),
                            response[index].Salesman,
                            response[index].Customer,
                            response[index].InqStatus,
                            QNumber,
                            QDate,
                            SONumber,
                            SODate,
                            PONumber,
                            PODate,
                            DONumber,
                            DoDate,
                    ]).draw();
                })
            });
        }
        //----------------------------------------------------------------------------
        //------------------------- Document Count -----------------------------------
        $.fn.DocCount = function (FromDates, ToDates) {
            $.get('/FillDocCount', { FromDate: FromDates, ToDate: ToDates }).done(function (response) {

                $("#inqcount").html(response.InquiryCount)

                $("#quotcount").html(response.QuotationCount)
                $("#quotamt").html(parseFloat(response.QuotationAmount).toLocaleString('en-US', { maximumFractionDigits: 0 }))

                $("#socount").html(response.SOCount)
                $("#soamt").html(parseFloat(response.SOAmount).toLocaleString('en-US', { maximumFractionDigits: 0 }))

                $("#pocount").html(response.POCount)
                $("#poamt").html(parseFloat(response.POAmount).toLocaleString('en-US', { maximumFractionDigits: 0 }))

                $("#dncount").html(response.DNCount)


                const xValues2 = ["Quotation", "Order", "Purchase Order"];
                const yValues2 = [response.QuotationAmount, response.SOAmount, response.POAmount];
                const barColors2 = ["#b91d47",
            "#00aba9",
            "#2b5797",
            "#e8c3b9",
            "#1e7145"];
                new Chart("barChart", {
                    type: "bar",
                    data: {
                        labels: xValues2,
                        datasets: [{
                            backgroundColor: barColors2,
                            data: yValues2
                        }]
                    },
                    options: {
                        legend: { display: false },
                        title: {
                            display: true,
                            text: "Amount Chart"
                        }
                    }
                });



                const xValues = ["Quotation", "Order", "Purchase Order"];
                const yValues = [response.QuotationCount, response.SOCount, response.POCount];
                const barColors = [
                  "#b91d47",
                  "#00aba9",
                  "#2b5797",
                  "#e8c3b9",
                  "#1e7145"
                ];

                new Chart("piechart", {
                    type: "doughnut",
                    data: {
                        labels: xValues,
                        datasets: [{
                            backgroundColor: barColors,
                            data: yValues
                        }]
                    },
                    options: {
                        title: {
                            display: true,
                            text: "Count Chart"
                        }
                    }
                });


            });
        }
        //--------------------------------------------------------------------------------
        //------------------ Transaction Detail List -------------------------------------
        $.fn.FillOrderNew = function (menuidpage) {
            if ($.fn.DataTable.isDataTable('#grddetail1')) {
                var table = $('#grddetail1').DataTable();
                table.destroy();
                $("#grddetail1 th, #grddetail1 td").remove();
            }

            var DataSetDetail = [];
            $('#grddetail1').DataTable({
                data: DataSetDetail,
                columns: [
                    { title: "Number" },
                    { title: "Date" },
                    { title: "Code" },
                    { title: "Name" },
                    { title: "Currency" },
                    { title: "Approval" },
                    { title: "Amount" },
                    { title: "Prepared By" },
                    { title: "View/Edit" },
                    { title: "Print" }
                ],
                searching: false,
                sorting: false,
                paging: false,
                fixedHeader: true,
                "scrollX": true,
                "scrollY": "700px",
                "scrollCollapse": true,
                'dom': 'Rlfrtip'
            });

            $.get('/FillDashboardOrderListDate', { MenuID: menuidpage, FromDate: $("#fromdate").val(), ToDate: $("#todate").val(), Approval: $("#ApprovalFilter").val() }).done(function (responseUnitData) {
                var table = $('#grddetail1').DataTable();

                $.each(responseUnitData, function (index) {

                    table.row.add([
                            responseUnitData[index].fld4,
                            ConvertDate(responseUnitData[index].fld6),
                            responseUnitData[index].fld11,
                            responseUnitData[index].fld17,
                            responseUnitData[index].fld12,
                            responseUnitData[index].fld20,
                            responseUnitData[index].fld28,
                            responseUnitData[index].fld22,
                            '<a href=/OrderEntry?menuid=' + menuidpage + '&code=' + responseUnitData[index].fld4 + ' style:padding-left35px ><i class="fa fa-pencil-square-o fa-lg" aria-hidden="true" style="font-size:1.4em!important"></i></a>',//class=\"btn btn-default\"
                            '<a href=\"javascript:(function(){window.open(\'/OrderPrint?menuid=' + menuidpage + '&code=' + responseUnitData[index].fld4 + '\');})()\"   style=\"color:green\"><i class="fa fa-print" aria-hidden="true" style="font-size:1.4em!important"></i></a>' //class=\"btn btn-default\"
                    ]).draw();
                })
            });
        }
        //--------------------------------------------------------------------------------
        //------------------------------------ MR List -----------------------------------
        $.fn.FillMaterialRequestNew = function (menuidpage) {
            debugger;
            if ($.fn.DataTable.isDataTable('#grddetail1')) {
                var table = $('#grddetail1').DataTable();
                table.destroy();
                $("#grddetail1 th, #grddetail1 td").remove();
            }

            var DataSetDetail = [];
            $('#grddetail1').DataTable({
                data: DataSetDetail,
                columns: [
                    { title: "Number" },
                    { title: "Date" },
                    { title: "Customer" },
                    { title: "Salesman" },
                    { title: "Supplier" },
                    { title: "Budget" },
                    { title: "Approval" },
                    { title: "Status" },
                    { title: "Prepared By" },
                    { title: "View/Edit" },
                    { title: "Print" }
                ],
                searching: false,
                sorting: false,
                paging: false,
                fixedHeader: true,
                "scrollX": true,
                "scrollY": "700px",
                "scrollCollapse": true,
                'dom': 'Rlfrtip'
            });

            $.get('/FillDashboardMaterialRequestListDate', { MenuID: menuidpage, FromDate: $("#fromdate").val(), ToDate: $("#todate").val(), Approval: $("#ApprovalFilter").val(), InqStatus: $("#InqStatusFilter").val() }).done(function (responseUnitData) {
                var table = $('#grddetail1').DataTable();

                $.each(responseUnitData, function (index) {

                    table.row.add([
                            responseUnitData[index].fld4,
                            ConvertDate(responseUnitData[index].fld5),
                            responseUnitData[index].fld10,
                            responseUnitData[index].fld16,
                            responseUnitData[index].fld18,
                            responseUnitData[index].fld21,
                            responseUnitData[index].fld13,
                            responseUnitData[index].fld19,
                            responseUnitData[index].fld11,
                            '<a href=/MaterialRequestEntry?menuid=' + menuidpage + '&code=' + responseUnitData[index].fld4 + ' ><i class="fa fa-pencil-square-o fa-lg" aria-hidden="true" style="font-size:1.4em!important"></i></a>',//class=\"btn btn-default\"
                            '<a href=\"javascript:(function(){window.open(\'/MaterialRequestPrint?menuid=' + menuidpage + '&code=' + responseUnitData[index].fld4 + '\');})()\"   style=\"color:green\"><i class="fa fa-print" aria-hidden="true" style="font-size:1.4em!important"></i></a>'//class=\"btn btn-default\"
                    ]).draw();
                    var trLast = $("#grdetail1 tbody tr:last");
                    if (responseUnitData[index].fld6 != "") {
                        trLast.find('td:first').css("background-color", responseUnitData[index].fld6);
                    }

                    var row = table.row(this);
                    // Change the background color of the first cell in the current row
                    row.node().querySelector('td:first-child').style.backgroundColor = responseUnitData[index].fld6;

                })
            });
        }
        //--------------------------------------------------------------------------------
        //------------------------ Salesman wise Inq Count -------------------------------
        $.fn.SalesmWiseInqCount = function () {
            if ($.fn.DataTable.isDataTable('#grddetail2')) {
                var table = $('#grddetail2').DataTable();
                table.destroy();
                $("#grddetail2 th, #grddetail2 td").remove();
            }

            var DataSetDetail = [];
            $('#grddetail2').DataTable({
                data: DataSetDetail,
                columns: [
                    { title: "Salesman" },
                    { title: "Total" },
                    { title: "Make Contact and Build Rapport" },
                    { title: "Qualify Compatibility" },
                    { title: "Analyse Prospects Needs" },
                    { title: "Pitch Your Product" },
                    { title: "Deliver Proposal" },
                    { title: "Negotiate" },
                    { title: "Close The Sale" }
                ],
                searching: false,
                sorting: false,
                paging: false,
                fixedHeader: true,
                "scrollX": true,
                "scrollY": "700px",
                "scrollCollapse": true,
                'dom': 'Rlfrtip'
            });

            $.get('/FillSalesmanWiseInqCountList', { FromDate: $("#fromdate").val(), ToDate: $("#todate").val() }).done(function (responseUnitData) {
                var table = $('#grddetail2').DataTable();

                $.each(responseUnitData, function (index) {

                    table.row.add([
                            responseUnitData[index].Salesman,
                            responseUnitData[index].Total,
                            responseUnitData[index].MakeContactandBuildRapport,
                            responseUnitData[index].QualifyCompatibility,
                            responseUnitData[index].AnalyseProspectsNeeds,
                            responseUnitData[index].PitchYourProduct,
                            responseUnitData[index].DeliverProposal,
                            responseUnitData[index].Negotiate,
                            responseUnitData[index].CloseTheSale,
                    ]).draw();
                })
            });
        }
        //--------------------------------------------------------------------------------
        $("#myInput").on("keyup", function () {
            var value = $(this).val().toLowerCase();
            $("#grdorderdetail tbody tr input").filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
            });
        });


        $.fn.NewRowSalesmanInq = function (HeaderYN) {
            var HeaderWithDataType = [];
            HeaderWithDataType.push(["*:sel:L:20:rowselector", "Salesman:txtL:L:150:Salesman", "Make Contact and Build Rapport:txtL:L:150:st1", "Qualify Compatibility:txtL:L:200:st2",
                              "Analyse Prospects needs:txtL:L:150:st3", "Pitch Your Product:txtL:L:100:st4", "Deliver Proposal:txtL:L:200:st5",
                              "Negotiate:txtL:L:100:st6", "Close The Sale:txtL:L:100:st7"
            ]);

            if (HeaderYN == 'Y') {
                $("#grdetailhead").append(TableInitializeWithHeader(HeaderWithDataType, 9));
            }
            else {
                $("#grdetailbody").append(TableInitializeWithNewRow(HeaderWithDataType, 9));
            }
        }


        //-------------------------------- Drop Down ----------
        $(".js-example-tags").select2({
            tags: true
        });
        //-----------------------------------------------------

    });

</script>

<style>
    #rcorners1 {
        border-radius: 25px;
        background: #73AD21;
        padding: 20px;
        width: 200px;
        height: 150px;
    }

    .panel-default {
        border-color: #dddddd !important;
        box-shadow: 0 .15rem 1.75rem 0 rgba(58, 59, 69, .15) !important;
        position: relative !important;
        display: flex !important;
        flex-direction: column !important;
        min-width: 0 !important;
        word-wrap: break-word !important;
        background-color: #fff !important;
        background-clip: border-box !important;
        border: 1px solid #e3e6f0 !important;
        border-radius: .35rem !important;
        height: 350px !important;
        margin-bottom: 23px;
        
    }
    .panel-body {
        /*padding: 14px!important;*/
    }
    .panel-title {
        font-weight: 700 !important;
        font-size: 1rem !important;
    }
    .panel-default > .panel-heading {
        color: #4e73df !important;
        font-weight: 700 !important;
        padding-top: 1rem !important;
        padding-bottom: 1rem !important;
        padding: .75rem .75rem !important;
        margin-bottom: 0 !important;
        background-color: #f8f9fc !important;
        border-bottom: 1px solid #e3e6f0 !important;
        font-size: 1rem !important;
    }
    /*.panel-default > .panel-heading {
        color: #4e73df !important;
        font-weight: 700 !important;
        padding-top: 1.5rem !important;
        padding-bottom: 1.5rem !important;
        padding: .75rem 1.25rem;
        margin-bottom: 0 !important;
        background-color: #f8f9fc !important;
        border-bottom: 1px solid #e3e6f0 !important;
        font-size: 1rem !important;
    }*/
</style>

<style>
    .row-red {
        background-color: #FF0000;
    }

    .row-green {
        background-color: #00FF00;
    }

    .row-blue {
        background-color: #0000FF;
    }

    .modal-body {
        position: relative;
        overflow-y: auto;
        /*max-height: 900px;*/
        padding: 15px;
    }

    .fullscreen {
        width: 100% !important;
        height: 100% !important;
        margin: 0;
        top: 0;
        left: 0;
    }


    .card-box {
        position: relative;
        color: #fff;
        padding: 20px 10px 2px;
        margin: 20px 0px;
        border-radius: 5px;
    }

        .card-box:hover {
            text-decoration: none;
            color: #f1f1f1;
        }

            .card-box:hover .icon i {
                font-size: 100px;
                transition: 1s;
                -webkit-transition: 1s;
            }

        .card-box .inner {
            padding: 5px 10px 0 2px;
        }

        .card-box h3 {
            font-size: 27px;
            font-weight: bold;
            margin: 0 0 8px 0;
            white-space: nowrap;
            padding: 0;
            text-align: left;
        }

        .card-box p {
            font-size: 18px;
        }

        .card-box .icon {
            position: absolute;
            top: auto;
            bottom: 5px;
            right: 5px;
            z-index: 0;
            font-size: 72px;
            color: rgba(0, 0, 0, 0.15);
        }

        .card-box .card-box-footer {
            position: absolute;
            left: 0px;
            bottom: 0px;
            text-align: center;
            padding: 3px 0;
            color: rgba(255, 255, 255, 0.8);
            background: rgba(0, 0, 0, 0.1);
            width: 100%;
            text-decoration: none;
        }

        .card-box:hover .card-box-footer {
            background: rgba(0, 0, 0, 0.3);
        }


    .bg-Inquiry {
        background-color: #02A8C2 !important;
    }

    .bg-Quotation {
        background-color: #F24A7B !important;
    }

    .bg-SalesOrder {
        background-color: #12C0A5 !important;
    }

    .bg-PurchaseOrder {
        background-color: #FDBA35 !important;
    }

    .bg-DeliveryNote {
        background-color: #3ED0A3 !important;
    }

    .groupbar1 {
        /*background-color: #53a4d8;*/
        margin-top: 30px;
        margin-left: 0px;
        margin-right: 10px;
        padding-left: 10px;
        font-family: Calibri;
        /*color: white;*/
        color: #4E68A6;
        font-weight: bold;
        height: 30px;
        font-size: 18px;
    }
</style>
<style>
    /* USER LIST TABLE */
    .user-list tbody td > img {
        position: relative;
        max-width: 50px;
        float: left;
        margin-right: 15px;
    }

    .user-list tbody td .user-link {
        display: block;
        font-size: 1.25em;
        padding-top: 3px;
        margin-left: 60px;
    }

    .user-list tbody td .user-subhead {
        font-size: 0.875em;
        font-style: italic;
    }

    /* TABLES */
    .table {
        border-collapse: separate;
    }

    .table-hover > tbody > tr:hover > td,
    .table-hover > tbody > tr:hover > th {
        background-color: #eee;
    }

    .table thead > tr > th {
        border-bottom: 1px solid #C2C2C2;
        padding-bottom: 0;
    }

    .table tbody > tr > td {
        font-size: 0.875em;
        background: #f5f5f5;
        border-top: 10px solid #fff;
        vertical-align: middle;
        padding: 12px 8px;
    }

        .table tbody > tr > td:first-child,
        .table thead > tr > th:first-child {
            padding-left: 20px;
        }

    .table thead > tr > th span {
        border-bottom: 2px solid #C2C2C2;
        display: inline-block;
        padding: 0 5px;
        padding-bottom: 5px;
        font-weight: normal;
    }

    .table thead > tr > th > a span {
        color: #344644;
    }

        .table thead > tr > th > a span:after {
            content: "\f0dc";
            font-family: FontAwesome;
            font-style: normal;
            font-weight: normal;
            text-decoration: inherit;
            margin-left: 5px;
            font-size: 0.75em;
        }

    .table thead > tr > th > a.asc span:after {
        content: "\f0dd";
    }

    .table thead > tr > th > a.desc span:after {
        content: "\f0de";
    }

    .table thead > tr > th > a:hover span {
        text-decoration: none;
        color: #2bb6a3;
        border-color: #2bb6a3;
    }

    .table.table-hover tbody > tr > td {
        -webkit-transition: background-color 0.15s ease-in-out 0s;
        transition: background-color 0.15s ease-in-out 0s;
    }

    .table tbody tr td .call-type {
        display: block;
        font-size: 0.75em;
        text-align: center;
    }

    .table tbody tr td .first-line {
        line-height: 1.5;
        font-weight: 400;
        font-size: 1.125em;
    }

        .table tbody tr td .first-line span {
            font-size: 0.875em;
            color: #969696;
            font-weight: 300;
        }

    .table tbody tr td .second-line {
        font-size: 0.875em;
        line-height: 1.2;
    }

    .table a.table-link {
        margin: 0 5px;
        font-size: 1.125em;
    }

        .table a.table-link:hover {
            text-decoration: none;
            color: #2aa493;
        }

        .table a.table-link.danger {
            color: #fe635f;
        }

            .table a.table-link.danger:hover {
                color: #dd504c;
            }

    .table-products tbody > tr > td {
        background: none;
        border: none;
        border-bottom: 1px solid #ebebeb;
        -webkit-transition: background-color 0.15s ease-in-out 0s;
        transition: background-color 0.15s ease-in-out 0s;
        position: relative;
    }

    .table-products tbody > tr:hover > td {
        text-decoration: none;
        background-color: #f6f6f6;
    }

    .table-products .name {
        display: block;
        font-weight: 600;
        padding-bottom: 7px;
    }

    .table-products .price {
        display: block;
        text-decoration: none;
        width: 50%;
        float: left;
        font-size: 0.875em;
    }

        .table-products .price > i {
            color: #8dc859;
        }

    .table-products .warranty {
        display: block;
        text-decoration: none;
        width: 50%;
        float: left;
        font-size: 0.875em;
    }

        .table-products .warranty > i {
            color: #f1c40f;
        }

    .table tbody > tr.table-line-fb > td {
        background-color: #9daccb;
        color: #262525;
    }

    .table tbody > tr.table-line-twitter > td {
        background-color: #9fccff;
        color: #262525;
    }

    .table tbody > tr.table-line-plus > td {
        background-color: #eea59c;
        color: #262525;
    }

    .table-stats .status-social-icon {
        font-size: 1.9em;
        vertical-align: bottom;
    }

    .table-stats .table-line-fb .status-social-icon {
        color: #556484;
    }

    .table-stats .table-line-twitter .status-social-icon {
        color: #5885b8;
    }

    .table-stats .table-line-plus .status-social-icon {
        color: #a75d54;
    }
</style>
<link href="~/Content/EZDataEntrtyStyle.css" rel="stylesheet" />
<link href="~/Content/EzTableStyle_New.css" rel="stylesheet" />
<link href="~/Content/EZButtonStyle.css" rel="stylesheet" />
<style>
    .modal-dialog {
        position: static;
    }

    .counter {
        /* background-color: #f5f5f5; */
        /* padding: 10px 0; */
        /* border-radius: 5px; */
        margin-bottom: 16px;
        border-left: .25rem solid #4e73df !important;
        box-shadow: 0 .15rem 1.75rem 0 rgba(58, 59, 69, .15) !important;
        position: relative;
        display: flex;
        flex-direction: column;
        min-width: 0;
        word-wrap: break-word;
        background-color: #fff;
        background-clip: border-box;
        border: 1px solid #e3e6f0;
        border-radius: 6px;
        padding-bottom: 7px !important;
        min-height: 1px;
        padding: 1.25rem;
        border-left: 3px solid #4e73df !important;
    }

    .count-title {
        /* font-size: 31px; */
        /* font-weight: normal; */
        margin-top: 12px !important;
        margin-bottom: 10px !important;
        text-align: left !important;
        color: #5a5c69 !important;
        font-size: 1.2rem !important;
        font-weight: 700 !important;
        margin-left: 15px !important;
    }

    .count-text {
        margin-top: 14px !important;
        margin-bottom: 0px !important;
        text-align: left !important;
        font-size: small !important;
        color: #4e73df !important;
        font-weight: 600 !important;
        margin-left: 15px !important;
    }

    .fa-2x {
        margin: 0 auto;
        float: none;
        display: table;
        color: #FF5E00;
        font-size:larger;
    }
    /* width */
    ::-webkit-scrollbar {
        width: 10px;
    }

    /* Track */
    ::-webkit-scrollbar-track {
        background: #f1f1f1;
    }

    /* Handle */
    ::-webkit-scrollbar-thumb {
        background: #888;
    }

        /* Handle on hover */
        ::-webkit-scrollbar-thumb:hover {
            background: #555;
</style>

<body>
    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#myModal">
        <i class="fa fa-cog" aria-hidden="true"></i>
    </button>
    <!-- The Modal -->
    <div class="modal" id="myModal">
        <div class="modal-dialog modal-xl  modal-dialog-scrollable">
            <div class="modal-content">

                <!-- Modal Header -->
                <div class="modal-header">
                    <h4 class="modal-title">Dashboard Configuration</h4>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>

                <!-- Modal body -->
                <div class="modal-body">

                    <div class="container">
                        <div class="row">

                            <div class="col-md-8" style="overflow:scroll ">
                                <div class="row">
                                    <div class="col-lg-12">
                                        <div class="main-box clearfix">
                                            <div class="table-responsive">
                                                <table class="table user-list" style="margin:0px">
                                                    <thead>
                                                        <tr>
                                                            <th><span>ID</span></th>
                                                            <th><span>Type</span></th>
                                                            <th><span>Chart Id</span></th>
                                                            <th><span>Query</span></th>
                                                            <th><span>Caption</span></th>
                                                            <th><span>Chart Order</span></th>
                                                            <th><span>Status</span></th>
                                                            <th><span>Action</span></th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @foreach (DataRow row in Model.Tables[1].Rows)
                                                        {
                                                            <tr>
                                                                <td>
                                                                    <span>@row["Id"].ToString()</span>
                                                                </td>
                                                                <td>
                                                                    <span>@row["Type"].ToString()</span>
                                                                </td>
                                                                <td>
                                                                    <span>@row["ChartId"].ToString()</span>
                                                                </td>
                                                                <td>
                                                                    <span>@row["SpName"].ToString()</span>
                                                                </td>
                                                                <td>
                                                                    <span>@row["Caption"].ToString()</span>
                                                                </td>
                                                                <td>
                                                                    <span>@row["ChartOrder"].ToString()</span>
                                                                </td>
                                                                <td>
                                                                    <span class="label label-default">@row["IsActive"].ToString()</span>
                                                                </td>

                                                                <td style="width: 20%;">

                                                                    <a href="#" class="table-link" onclick="getRowData(this)">
                                                                        <span class="fa-stack">
                                                                            <i class="fa fa-square fa-stack-2x"></i>
                                                                            <i class="fa fa-pencil fa-stack-1x fa-inverse"></i>
                                                                        </span>
                                                                    </a>
                                                                    <a href="#" class="table-link danger" onclick="DeleteData(this)">
                                                                        <span class="fa-stack">
                                                                            <i class="fa fa-square fa-stack-2x"></i>
                                                                            <i class="fa fa-trash-o fa-stack-1x fa-inverse"></i>
                                                                        </span>
                                                                    </a>
                                                                </td>
                                                            </tr>
                                                        }
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-4" style="position:sticky;height:100%;top:0">
                                <div class="row">
                                    <div class="col-md-6">
                                        <input type="hidden" id="id" value="0">
                                        <label for="exampleFormControlInput1" class="form-label">Type</label>
                                        <select class="form-control" aria-label=".form-select-sm example" id="type">
                                            <option value="pie">Pie</option>
                                            <option value="line">Line</option>
                                            <option value="bar">Bar</option>
                                            <option value="doughnut">Doughnut</option>
                                            <option value="box">Box</option>
                                            <option value="countbox">Dashboard Box</option>
                                        </select>
                                    </div>
                                    <div class="col-md-6">
                                        <label for="exampleFormControlInput1" class="form-label">Chart Id</label>
                                        <input type="text" class="form-control" id="chartid" placeholder="Chart Id" required>
                                    </div>
                                </div>
                                <br />
                                <br />
                                <div class="row">
                                    <div class="col-md-12">
                                        <label for="exampleFormControlInput1" class="form-label">Query</label>
                                        <input type="text" class="form-control" id="query" placeholder="Query">
                                    </div>

                                </div>
                                <br /><br />
                                <div class="row">
                                    <div class="col-md-12">
                                        <label for="exampleFormControlInput1" class="form-label">Caption</label>
                                        <input type="text" class="form-control" id="caption" placeholder="Caption" required>
                                    </div>

                                </div>
                                <br /><br />
                                <div class="row">
                                    <div class="col-md-6">
                                        <label for="exampleFormControlInput1" class="form-label">Chart Order</label>
                                        <input type="text" class="form-control" id="chartorder" placeholder="Chart Order" value="@ViewBag.MaxChartOrder">
                                    </div>
                                    <div class="col-md-6">
                                        <label for="exampleFormControlInput1" class="form-label">Status</label><br />
                                        <input type="checkbox" id="status">
                                    </div>

                                </div>

                               
                            </div>
                        </div>
                    </div>

                </div>

                <!-- Modal footer -->
                <div class="modal-footer">
                    <button type="submit" class="btn btn-outline-primary" onclick="save()">Save</button>
                    <button type="button" class="btn btn-outline-secondary" onclick="Cancel()">Cancel</button>
                    <button type="button" class="btn btn-outline-danger" data-bs-dismiss="modal">Close</button>
                </div>

            </div>
        </div>
    </div>

    <div class="container">

        <div class="row">
            <i class="fa-solid fa-cog fa-spin"></i>
            @foreach (DataRow row in Model.Tables[0].Rows)
            {
                if (row["Type"].ToString() == "countbox")
                {
                    string[] barColors = { "#4e73df", "#1cc88a", "#36b9cc", "#f6c23e", "#e74a3b", "#858796" };

                    var temp = row["Label"].ToString().Split(',');
                    var temp1 = row["Values"].ToString().Split(',');
                    var count = temp.Length;
                    var i = 0;
                    for (i = 0; i < count; i++)
                    {
                        var temp2 = temp1[i].Split('#');
                        if (temp2.Length == 2)
                        {
                            <div class="col-md-3">
                                <div class="counter" style="border-left: 3px solid @barColors[i] !important;">
                                    <div class="row">
                                        <div class="col-md-9">
                                            <p class="count-text " style="color: @barColors[i]!important">@temp[i]</p>
                                            <h2 class="timer count-title count-number" data-to="100" data-speed="1500">@temp2[0]</h2>
                                        </div>
                                        <div class="col-md-3">
                                            <i class="@temp2[1]" style="color: @barColors[i] !important"></i>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        }
                        else
                        { <div class="col-md-3">
                                <div class="counter" style="border-left: 3px solid @barColors[i] !important;">
                                    <div class="row">
                                        <div class="col-md-9">
                                            <p class="count-text " style="color: @barColors[i]!important">@temp[i]</p>
                                            <h2 class="timer count-title count-number" data-to="100" data-speed="1500">@temp1[0]</h2>
                                        </div>
                                        <div class="col-md-3">
                                            <i  style="color: @barColors[i] !important"></i>
                                        </div>
                                    </div>

                                </div>
                            </div>

                        }

                    }

                }
                else if (row["Type"].ToString() == "box")
                {
                    var temp = row["Label"].ToString().Split(',');
                    var temp1 = row["Values"].ToString().Split(',');

                    var count = temp.Length;
                    var i = 0;
                    <div class="col-md-6">
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <h3 class="panel-title">@row["Caption"]</h3>
                            </div>
                            <div class="panel-body" style="height:292px;overflow:auto;align-content:center">

                                <div class="row text-center">
                                    @for (i = 0; i < count; i++)
                                    {
                                        int a = i + 1;
                                        <div class="col-md-6">

                                            @if (i % 2 == 0)
                                            {
                                                if (int.Parse(temp1[i]) > int.Parse(temp1[a]))
                                                {<div class="counter" style="border-left: 3px solid #1cc88a !important;">

                                                        <div class="row">

                                                            <div class="col-md-9">

                                                                <p class="count-text " style="color: #1cc88a!important">@temp[i]</p>

                                                                <h2 class="timer count-title count-number" data-to="100" data-speed="1500">@temp1[i]</h2>

                                                            </div>

                                                            <div class="col-md-3">

                                                                <i class="fa fa-arrow-up fa-2x" style="color: #1cc88a !important"></i>

                                                            </div>

                                                        </div>


                                                    </div>
                                                }
                                                if (int.Parse(temp1[i]) < int.Parse(temp1[a]))
                                                {<div class="counter" style="border-left: 3px solid #e74a3b !important;">


                                                        <div class="row">

                                                            <div class="col-md-9">

                                                                <p class="count-text " style="color: #e74a3b !important">@temp[i]</p>

                                                                <h2 class="timer count-title count-number" data-to="100" data-speed="1500">@temp1[i]</h2>

                                                            </div>

                                                            <div class="col-md-3">

                                                                <i class="fa fa-arrow-down fa-2x" style="color: #e74a3b !important"></i>

                                                            </div>

                                                        </div>


                                                    </div>
                                                }
                                            }

                                            else
                                            {
                                                if (int.Parse(temp1[i - 1]) < int.Parse(temp1[i]))
                                                {<div class="counter" style="border-left: 3px solid #1cc88a !important;">


                                                        <div class="row">

                                                            <div class="col-md-9">

                                                                <p class="count-text " style="color: #1cc88a!important">@temp[i]</p>

                                                                <h2 class="timer count-title count-number" data-to="100" data-speed="1500">@temp1[i]</h2>

                                                            </div>

                                                            <div class="col-md-3">

                                                                <i class="fa fa-arrow-up fa-2x" style="color: #1cc88a !important"></i>

                                                            </div>

                                                        </div>


                                                    </div>
                                                }
                                                if (int.Parse(temp1[i - 1]) > int.Parse(temp1[i]))
                                                {<div class="counter" style="border-left: 3px solid #e74a3b !important;">

                                                        <div class="row">

                                                            <div class="col-md-9">

                                                                <p class="count-text " style="color: #e74a3b !important">@temp[i]</p>

                                                                <h2 class="timer count-title count-number" data-to="100" data-speed="1500">@temp1[i]</h2>

                                                            </div>

                                                            <div class="col-md-3">

                                                                <i class="fa fa-arrow-down fa-2x" style="color: #e74a3b !important"></i>

                                                            </div>

                                                        </div>





                                                    </div>
                                                }

                                            }




                                        </div>
                                    }


                                </div>



                            </div>
                        </div>

                    </div>
                }
                else
                {<div class="col-md-6">

                        <div class="panel panel-default">

                            <div class="panel-heading">

                                <h3 class="panel-title">@row["Caption"]</h3>

                            </div>

                            <div class="panel-body">

                                <canvas id=@row["Id"] style="width:100%;max-width:600px"></canvas>

                            </div>

                        </div>

                    </div>
                    @*<div class="col-md-6" style="margin-bottom:17px;">
                    <div class="card border-info ">
                        <div class="card-header" style="text-align: center; font-weight: 600;">@row["Caption"]</div>
                        <div class="card-body">
                            <canvas id=@row["Id"] style="width:100%;max-width:600px"></canvas>

                        </div>
                    </div>
                </div>*@
                }

                <br />

            }

        </div>
    </div>
    <div>



    </div>
</body>
<script>
    function Cancel() {
        $('#id').val("0");
        $('#type').val("pie");
        $('#chartid').val("");
        $('#query').val("");
        $('#caption').val("");
        $('#chartorder').val("");
        $("#status").prop("checked", false);
        $("#chartid").prop('disabled', false);
    }
    function save() {
        debugger;
        var error = "";
        var count = 0;
        if ($('#chartid').val() == "") {
            count++;
            error = count+".Chart Id can not be empty...<br>";
        }
        if ($('#query').val() == "") {
            count++;
            error = error + count + ".Query can not be empty...<br>";
        }
        else {
            if ($('#query').val().indexOf("companyid") == -1) {
                count++;
                error = error + count + ".In query please add companyid parameter...<br>";
            }
            if ($('#query').val().indexOf("branchid") == -1) {
                count++;
                error = error + count + ".In query please add branchid parameter...<br>";
            }   
        }
       
        if ($('#caption').val() == "") {
            count++;
            error = error + count + ".Caption can not be empty...<br>";
        }
        if ($('#chartorder').val() == "") {
            count++;
            error = error + count + ".Chart Order can not be empty...<br>";
        }
        if (error != "") {
            Swal.fire({
                icon: "error",
                title: "Dashboard Configuration...",
                html: error,

            });
            return;
        }
        var data = {
            id:$('#id').val(),
            type: $('#type').val(),
            chartid: $('#chartid').val(),
            query: $('#query').val(),
            caption:$('#caption').val(),
            chartorder:$('#chartorder').val(),
            status: $('#status').is(':checked')
        };
        $.ajax({
            url: "/MDI/SaveDashBoard",
            type: "POST",
            dataType: "json",
            data: data,
            success: function (mydata) {
                
                if (mydata.indexOf("Error") !== -1) {
                    Swal.fire({
                        icon: "error",
                        title: "Dashboard Configuration...",
                        html: mydata,

                    });
                }
                else if (mydata.indexOf("Success") !== -1){
                    Swal.fire({
                        icon: "success",
                        title: "Dashboard Configuration...",
                        html: mydata,

                    });

                    Cancel();
                    location.reload();
                }
                // $("#UpdateDiv").html(mydata);
                //history.pushState('', 'New URL: ' + href, href); // This Code lets you to change url howyouwant
            }
        });
        return false;
    }

    function DeleteData(button) {
        const row = button.parentNode.parentNode;
        const cells = row.getElementsByTagName('td');
        const id1 = cells[0].innerText;
        var data = {
            id: id1,
        };
        const swalWithBootstrapButtons = Swal.mixin({
            customClass: {
                confirmButton: "btn btn-success",
                cancelButton: "btn btn-danger"
            },
            buttonsStyling: true
        });
        swalWithBootstrapButtons.fire({
            title: "Are you sure?",
            text: "You won't be able to revert this!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonText: "Yes, delete it!",
            cancelButtonText: "No, cancel!",
            reverseButtons: true
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: "/MDI/DeleteDashBoard",
                    type: "POST",
                    dataType: "json",
                    data: data,
                    success: function (mydata) {

                        if (mydata.indexOf("Success") !== -1) {
                            swalWithBootstrapButtons.fire({
                                title: "Deleted!",
                                text: "Your record has been deleted.",
                                icon: "success"
                            });
                            location.reload();
                        }
                        else {

                        }
                        // $("#UpdateDiv").html(mydata);
                        //history.pushState('', 'New URL: ' + href, href); // This Code lets you to change url howyouwant
                    }
                });
               
            } else if (
                /* Read more about handling dismissals below */
                result.dismiss === Swal.DismissReason.cancel
            ) {
                swalWithBootstrapButtons.fire({
                    title: "Cancelled",
                    text: "Your imaginary record is safe :)",
                    icon: "error"
                });
            }
        });
        
    }

    function getRowData(button) {
        const row = button.parentNode.parentNode;
        const cells = row.getElementsByTagName('td');
        const id = cells[0].innerText;
        const type = cells[1].innerText;
        const chartid = cells[2].innerText;
        const query = cells[3].innerText;
        const caption = cells[4].innerText;
        const chartorder = cells[5].innerText;
        const status = cells[6].innerText;
        $('#id').val(id);
        $('#type').val(type);
        $('#chartid').val(chartid);
        $('#query').val(query);
        $('#caption').val(caption);
        $('#chartorder').val(chartorder);
        $("#status").prop("checked", status);

        $("#chartid").prop('disabled', true);
    }
</script>
<script>

    const barColors = [
        //"#b91d47",
        //"#00aba9",
        //"#2b5797",
        //"#e8c3b9",
        //"#1e7145",
        //"#b91d47",
        //"#00aba9",
        //"#2b5797",
        //"#e8c3b9",
        //"red"
        "#4e73df",
        "#1cc88a",
        "#36b9cc",
        "#f6c23e",
        "#e74a3b",
        "#858796",
    ];


    let i;

    var dataTable = @Html.Raw(dataTableJson);

    function demo(type1, id, xValues1, yValues1, Caption) {
        debugger;
        if (type1 == "line") {
            new Chart(id, {
        type: "line",
        data: {
            labels: xValues1,
            datasets: [{
                lineTension: 0.3,
                backgroundColor: "rgba(78, 115, 223, 0.05)",
                borderColor: "rgba(78, 115, 223, 1)",
                pointRadius: 3,
                pointBackgroundColor: "rgba(78, 115, 223, 1)",
                pointBorderColor: "rgba(78, 115, 223, 1)",
                pointHoverRadius: 3,
                pointHoverBackgroundColor: "rgba(78, 115, 223, 1)",
                pointHoverBorderColor: "rgba(78, 115, 223, 1)",
                pointHitRadius: 10,
                pointBorderWidth: 2,

                data: yValues1
            }]
        },
        options: {
            legend: { display: false },
             title: {
                display: false,
                 text: Caption,
                 bezierCurve: true
            },
            scales: {
                xAxes: [{
                    time: {
                        unit: 'date'
                    },
                    gridLines: {
                        display: false,
                        drawBorder: false
                    },
                    ticks: {
                        maxTicksLimit: 7
                    }
                }],
                yAxes: [{
                    ticks: {
                        maxTicksLimit: 5,
                        padding: 10,

                    },
                    gridLines: {
                        color: "rgb(234, 236, 244)",
                        zeroLineColor: "rgb(234, 236, 244)",
                        drawBorder: false,
                        borderDash: [2],
                        zeroLineBorderDash: [2]
                    }
                }],
            },
            tooltips: {
                backgroundColor: "rgb(255,255,255)",
                bodyFontColor: "#858796",
                titleMarginBottom: 10,
                titleFontColor: '#6e707e',
                titleFontSize: 14,
                borderColor: '#dddfeb',
                borderWidth: 1,
                xPadding: 15,
                yPadding: 15,
                displayColors: false,
                intersect: false,
                mode: 'index',
                caretPadding: 10,

                }


        }
    });

        }
        else if (type1 =="bar")
        {
            new Chart(id, {
        type: "bar",
        data: {
            labels: xValues1,
            datasets: [{
                backgroundColor: barColors,
                data: yValues1
            }]
                },
                data: {
                    labels: xValues1,
                    datasets: [{
                        backgroundColor: barColors,
                        data: yValues1
                    }]
                },
        options: {
            legend: {
                display: false
            },
            title: {
                display: false,
                text: Caption
            },
            scales: {
                xAxes: [{
                    time: {
                        unit: 'month'
                    },
                    gridLines: {
                        display: false,
                        drawBorder: false
                    },
                    ticks: {
                        maxTicksLimit: 6
                    },
                    maxBarThickness: 25,
                }],
                yAxes: [{
                    ticks: {
                        min: 0,
                        max: 300,
                        maxTicksLimit: 5,
                        padding: 10,
                        // Include a dollar sign in the ticks

                    },
                    gridLines: {
                        color: "rgb(234, 236, 244)",
                        zeroLineColor: "rgb(234, 236, 244)",
                        drawBorder: false,
                        borderDash: [2],
                        zeroLineBorderDash: [2]
                    }
                }],

            }, tooltips: {
                backgroundColor: "rgb(255,255,255)",
                bodyFontColor: "#858796",
                titleMarginBottom: 10,
                titleFontColor: '#6e707e',
                titleFontSize: 14,
                borderColor: '#dddfeb',
                borderWidth: 1,
                xPadding: 15,
                yPadding: 15,
                displayColors: false,
                intersect: false,
                mode: 'index',
                caretPadding: 10,

            }
        }
    });

        } else if (type1 == "pie" ) {


            new Chart(id, {
                type: type1,
                data: {
                    labels: xValues1,
                    datasets:
                        [{
                            backgroundColor: barColors,
                            data: yValues1,
                            hoverBorderColor: "rgba(234, 236, 244, 1)",


                        }]
                },
                options: {
                    maintainAspectRatio: false,
                    tooltips: {
                        backgroundColor: "rgb(255,255,255)",
                        bodyFontColor: "#858796",
                        borderColor: '#dddfeb',
                        borderWidth: 1,
                        xPadding: 15,
                        yPadding: 15,
                        displayColors: false,
                        caretPadding: 10,
                    },
                    legend: {
                        display: true,

                    },

                },

            });
        }
        else if ( type1 == "doughnut" ) {


        new Chart(id, {
            type: type1,
            data: {
                labels: xValues1,
                datasets:
                    [{
                        backgroundColor: barColors,
                        data: yValues1,
                        hoverBorderColor: "rgba(234, 236, 244, 1)",


                    }]
            },
            options: {
                maintainAspectRatio: false,
                tooltips: {
                    backgroundColor: "rgb(255,255,255)",
                    bodyFontColor: "#858796",
                    borderColor: '#dddfeb',
                    borderWidth: 1,
                    xPadding: 15,
                    yPadding: 15,
                    displayColors: false,
                    caretPadding: 10,
                },
                legend: {
                    display: true
                },
                cutoutPercentage: 80,
            },

        });
        }


    }

    dataTable.forEach(function (row) {

        var id = row.Id;
        var xValues1 = row.Label;
        var yValues1 = row.Values;
        var type1 = row.Type;
        var Caption = row.Caption;


        let text = xValues1;
        const myArray1 = text.split(",");

        let text2 = yValues1;
        const myArray2 = text2.split(",");


        demo(type1,id, myArray1, myArray2,Caption);

    });

</script>
<!--<body style="background-color:white">
    <div style="background-color:#465d94;color:white;font-family:Calibri;font-size:20px;display:none">
        <center>@vouchertitle</center>
    </div>
    <div class="panel panel-primary" style="border:none;padding-left:5px;padding-right:5px;padding-top:10px;">-->
@*class="container-fluid" style="overflow:auto"*@
<!--<div id="validatemsg">

</div>
<div class="panel-body" style="border:1px solid ;border-color:lightgray;box-shadow: 5px 5px #e6e6e6;">-->
@*class="container"*@
<!--<div class="table" id="MenuTable">
    <div class="row">
        <div class="col-lg-2">
            <label class="control-label" id="lblPostingDate" style="margin-bottom: 14px;">From Date</label><br />
            <input type="date" id="fromdate" class="form-control" />
        </div>
        <div class="col-lg-2">
            <label class="control-label" id="lblPostingDate" style="margin-bottom: 14px;">To Date</label><br />
            <input type="date" id="todate" class="form-control" />
        </div>


        <div class="col-lg-2">
            <label class="control-label" id="lblPostingDate">Inquiry Status</label><br />
            <select id="InqStatusFilter" class="form-control js-example-tags">
                <option value="">-select-</option>
                <option value="01">Make Contact and Build Rapport</option>
                <option value="02">Qualify Compatibility</option>
                <option value="03">Analyse Prospects needs</option>
                <option value="04">Pitch Your Product</option>
                <option value="05">Deliver Proposal</option>
                <option value="06">Negotiate</option>
                <option value="07">Close The Sale</option>
            </select>
        </div>
        <div class="col-lg-2">
            <label class="control-label" id="lblPostingDate">Approval</label><br />
            <select id="ApprovalFilter" class="form-control js-example-tags">
                <option value="">-select-</option>
                <option value="Y">Approved</option>
                <option value="N">Pending</option>
                <option value="R">Rejected</option>
            </select>
        </div>
        <div class="col-lg-2" id="DivApproveBtns" style="padding-top: 40px;">-->
@*<button class="ApproveBtn" id="OkBtn"><i class="glyphicon glyphicon-ok"></i> Refresh Tracking</button>*@
<!--&nbsp;&nbsp;
        <a href="#" id="OkBtn" class="btn btn-info btn-lg">
            <span class="glyphicon glyphicon-refresh"></span> Refresh
        </a>
    </div>
</div>
<hr />
<section class="home-section" style="background:#f0f2f5">

    <div class="main-section">
        <div class="dashbord" style="color:#fff!important;background-color:#34495E!important">
            <div class="icon-section">

                <big style="font-size:16px">Inquiry</big>
                <p><span id="inqcount">0</span></p>
            </div>

            <div class="detail-section">
                <a href="#" onclick="$.fn.FillMaterialRequestNew('ID_SalesInquiry')">More Info </a>
            </div>
        </div>
        <div class="dashbord dashbord-green" style="color:#fff!important;background-color:#16A085!important">
            <div class="icon-section">

                <big style="font-size:16px">Quotation - <span id="quotcount"></span></big>
                <p><span id="quotamt">0</span></p>
            </div>
            <div class="detail-section">
                <a href="#" onclick="$.fn.FillOrderNew('ID_SalesQuotation')">More Info </a>
            </div>
        </div>
        <div class="dashbord dashbord-orange" style="color:#fff!important;background-color:#F39C12!important">
            <div class="icon-section">

                <big style="font-size:16px">Order - <span id="socount"></span></big>
                <p><span id="soamt">0</span></p>
            </div>
            <div class="detail-section">
                <a href="#" onclick="$.fn.FillOrderNew('ID_SalesOrder')">More Info </a>
            </div>
        </div>
        <div class="dashbord dashbord-blue" style="color:#fff!important;background-color:#2980B9">
            <div class="icon-section">

                <big style="font-size:16px">Purchase Order - <span id="pocount"></span></big>
                <p><span id="poamt">0</span></p>
            </div>
            <div class="detail-section">
                <a href="#" onclick="$.fn.FillOrderNew('ID_PurchaseOrder')">More Info </a>
            </div>
        </div>

        <div class="dashbord dashbord-skyblue" style="color:#fff!important;background-color:#8E44AD">
            <div class="icon-section">

                <big style="font-size:16px">Delivery</big>
                <p><span id="dncount">0</span></p>
            </div>
            <div class="detail-section">
                <a href="#" onclick="$.fn.FillMaterialRequestNew('ID_DeliveryNote')">More Info </a>
            </div>
        </div>

        <div class="row" style="margin:18px">
            <div class="col-md-6">
                <div class="card border-info ">
                    <div class="card-header">Count chart</div>
                    <div class="card-body">
                        <canvas id="piechart" style="width:100%;max-width:600px"></canvas>
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="card border-info ">
                    <div class="card-header">Amount chart</div>
                    <div class="card-body">
                        <canvas id="barChart" style="width:100%;max-width:600px"></canvas>
                    </div>
                </div>
            </div>

        </div>
    </div>



    <br />

</section>-->
@*<div class="row" id="MenuTableRow">
        <div class="col-lg-2 col-sm-6">
            <div class="card-box bg-Inquiry" onclick="$.fn.FillMaterialRequestNew('ID_SalesInquiry')">
                <div class="inner">
                    <h4> Inquiry </h4>
                    <p> <span id="inqcount"></span></p>
                </div>
            </div>
        </div>
        <div class="col-lg-2 col-sm-6">
            <div class="card-box bg-Quotation" onclick="$.fn.FillOrderNew('ID_SalesQuotation')">
                <div class="inner">
                    <h4> Quotation </h4>
                    <p> <span id="quotcount"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="quotamt"></span></p>
                </div>
            </div>
        </div>

        <div class="col-lg-2 col-sm-6">
            <div class="card-box bg-SalesOrder" onclick="$.fn.FillOrderNew('ID_SalesOrder')">
                <div class="inner">
                    <h4> Order </h4>
                    <p> <span id="socount"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="soamt"></span></p>
                </div>
            </div>
        </div>
        <div class="col-lg-2 col-sm-6">
            <div class="card-box bg-PurchaseOrder" onclick="$.fn.FillOrderNew('ID_PurchaseOrder')">
                <div class="inner">
                    <h4> Purchase Order </h4>
                    <p> <span id="pocount"></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="poamt"></span></p>
                </div>
            </div>
        </div>
        <div class="col-lg-2 col-sm-6">
            <div class="card-box bg-DeliveryNote" onclick="$.fn.FillMaterialRequestNew('ID_DeliveryNote')">
                <div class="inner">
                    <h4> Delivery </h4>
                    <p> <span id="dncount"></span></p>
                </div>
            </div>
        </div>
    </div>*@
<!--<div class="row">
                    <p class="groupbar1">Inquiry Tracking</p>
                    <div id="divResult1" style="overflow:auto">
                        <table id="grddetail" class="display table table-striped table-bordered" style="width:100%"></table>
                    </div>
                </div>
                <div class="row">
                    <p class="groupbar1">Detail List</p>
                    <div id="divResult2" style="overflow:auto">
                        <table id="grddetail1" class="display table table-striped  table-bordered" style="width:100%"></table>
                    </div>
                </div>
                <div class="row">
                    <p class="groupbar1">Salesman Wise Inquiry</p>
                    <div id="divResult2" style="overflow:auto">
                        <table id="grddetail2" class="display table table-striped" style="width:100%"></table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>-->

<div id="MsgModal" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title" style="color:darkblue">EZBusiness System</h4>
            </div>
            <div class="modal-body">
                <label class="" control-label" id="msglbl" style="color:green;font-family:Calibri;font-size:20px"></label>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>




